---
# Installs the app by creating a virtualenv and installing some basic debugging
# tools.

- file: path={{ item }} state=directory owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}
  with_items:
    - /home/{{ ansible_ssh_user }}/{{ app_name }}
    - "{{ app_home }}/embedded"
  sudo: yes
- apt: pkg={{ item }} state=present
  with_items:
    - virtualenvwrapper
    - libpq-dev
    - libxml2-dev
    - libxslt1-dev
    - python-dev
    - libffi-dev
    - expect
    - git
  sudo: yes

- name: create {{ app_user }} user
  user: name={{ app_user }} shell=/bin/bash home="{{ app_home }}"
  sudo: yes

- name: install python development tools
  pip: name={{ item }} virtualenv="{{ app_home }}/embedded/"
  with_items:
    - ipdb
    - pika

- name: install pip 1.5.6
  pip: name=pip  virtualenv="{{ app_home }}/embedded/" version=1.5.6

- shell: echo $PATH
  environment:
    PATH: "{{ app_home }}/embedded/bin:{{ ansible_env.PATH }}"
    KNOX_ENV: test

- name: force {{ app_name }} into an editable install
  tags: pip
  pip: >
    name='-e .[tests]'
    chdir="/home/{{ ansible_ssh_user }}/{{ app_name }}"
    executable="{{ app_home }}/embedded/bin/pip"
  sudo: yes
  sudo_user: "{{ ansible_ssh_user }}"

- name: clean and recreate test db
  shell: >
    scripts/recreate-test
    chdir=/home/{{ ansible_ssh_user }}/{{ app_name }}
  environment:
    PATH: "{{ app_home }}/embedded/bin:{{ ansible_env.PATH }}"
    BALANCED_ENV: test
  sudo: yes
  sudo_user: "{{ ansible_ssh_user }}"

- name: remove compiled python files
  shell: >
    find . -name '*.pyc' -delete
    chdir=/home/{{ ansible_ssh_user }}/{{ app_name }}
